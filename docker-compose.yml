version: '3.0'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.10-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - ${RABBIT_HOST_PORT}:${RABBIT_PORT}
      - ${RABBIT_MANAGE_HOST_PORT}:${RABBIT_MANAGE_PORT}
    volumes:
      - homepp_rabbitmq_data:/var/lib/rabbitmq
    restart: on-failure
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRESQL_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - ./db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./db/postgresql.conf:/usr/share/postgresql/postgresql.conf
      - pgdata:/var/lib/postgresql/data
  api:
    container_name: api
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}
      - POSTGRESQL_BASE=root
      - API_HOST=api
      - API_PORT=${API_PORT}
      - BROKER_PROTOCOL=amqp
      - BROKER_USERNAME=${RABBIT_USERNAME}
      - BROKER_PASSWORD=${RABBIT_PASSWORD}
      - BROKER_HOST=rabbitmq
      - BROKER_PORT=${RABBIT_PORT}

    build:
      context: ./api-go
    ports:
      - ${API_HOST_PORT}:${API_PORT}
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
  savebase:
    container_name: savebase
    hostname: savebase
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=${POSTGRESQL_PORT}
      - POSTGRESQL_BASE=root
      - API_HOST=api
      - API_PORT=${API_PORT}
      - BROKER_PROTOCOL=amqp
      - BROKER_USERNAME=${RABBIT_USERNAME}
      - BROKER_PASSWORD=${RABBIT_PASSWORD}
      - BROKER_HOST=rabbitmq
      - BROKER_PORT=${RABBIT_PORT}
    build:
      context: ./api-go
      dockerfile: ./internal/basescript/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  aggregator-go:
    container_name: aggregator-go
    hostname: aggregator-go
    environment:
      - AGGREGATOR_HOST=aggregator-go
      - AGGREGATOR_PORT=${AGGREGATOR_PORT}
      - BROKER_PROTOCOL=amqp
      - BROKER_USERNAME=${RABBIT_USERNAME}
      - BROKER_PASSWORD=${RABBIT_PASSWORD}
      - BROKER_HOST=rabbitmq
      - BROKER_PORT=${RABBIT_PORT}
      - API_PROTOCOL=http
      - API_HOST=api
      - API_PORT=${API_PORT}
    build:
      context: ./aggregator-go
    ports:
      - ${AGGREGATOR_HOST_PORT}:${AGGREGATOR_PORT}
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
  
  pgadm:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:5050"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy


volumes:
  pgadmin-data:
  pgdata:
  homepp_rabbitmq_data: