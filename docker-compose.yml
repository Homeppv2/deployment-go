version: '3.0'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11.10-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - ${RABBIT_HOST_PORT}:${RABBIT_PORT}
      - ${RABBIT_MANAGE_HOST_PORT}:${RABBIT_MANAGE_PORT}
    volumes:
      - homepp_rabbitmq_data:/var/lib/rabbitmq
    restart: on-failure
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pass
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - ./db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - pgdata:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: docker.io/bitnami/redis:7.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6380:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - 'redis_data:/bitnami/redis/data'
  api:
    container_name: api
    build:
      context: ./api-go
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  aggregator:
    container_name: aggregator
    build:
      context: ./aggregator
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  redis_data:
    driver: local
  pgdata:
  homepp_rabbitmq_data: